modules:
  federa:
    enabled: true
    class: BrainModule
    path: modules/brain.py
    auto_scaling: true
    intelligent_routing: true
    dependencies: []
    personality: "Mądra, cierpliwa koordynatorka federacji"

  database_manager:
    enabled: true  # Włączony - startuje niezależnie
    class: DatabaseManager
    path: modules/database_manager.py
    dependencies: []
    static_startup: true  # Statyczny start bez nadzoru Federy

  realm_sqlite:
    enabled: false  # Tymczasowo wyłączony - zależy od database_manager
    class: RealmSqliteModule  
    path: modules/realm_sqlite.py
    dependencies: [database_manager]

  realm_memory:
    enabled: true  # Włączony - podstawowy realm
    class: MemoryRealmModule
    path: modules/realm_memory.py
    dependencies: [database_manager]
    static_startup: true  # Statyczny start z database_manager

  consciousness:
    enabled: false  # Tymczasowo wyłączony - wymaga naprawy konstruktora
    class: ConsciousnessModule
    path: modules/consciousness.py
    dependencies: [brain]

  harmony:
    enabled: false  # Tymczasowo wyłączony - wymaga naprawy konstruktora
    class: HarmonyModule
    path: modules/harmony.py
    dependencies: [consciousness]

  astral_containers:
    enabled: false  # Tymczasowo wyłączony - wymaga naprawy konstruktora
    class: AstralContainersModule
    path: modules/astral_containers.py
    dependencies: [database_manager]

  websocket_flow:
    enabled: false  # Tymczasowo wyłączony - wymaga naprawy konstruktora
    class: WebSocketFlowModule
    path: modules/websocket_flow.py
    dependencies: [brain]

  module_metadata_manager:
    enabled: true
    class: ModuleMetadataManagerModule
    path: modules/module_metadata_manager.py
    dependencies: []